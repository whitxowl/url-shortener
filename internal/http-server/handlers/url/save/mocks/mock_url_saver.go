// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockURLSaver creates a new instance of MockURLSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockURLSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockURLSaver {
	mock := &MockURLSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockURLSaver is an autogenerated mock type for the URLSaver type
type MockURLSaver struct {
	mock.Mock
}

type MockURLSaver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockURLSaver) EXPECT() *MockURLSaver_Expecter {
	return &MockURLSaver_Expecter{mock: &_m.Mock}
}

// SaveURL provides a mock function for the type MockURLSaver
func (_mock *MockURLSaver) SaveURL(urlToSave string, alias string) error {
	ret := _mock.Called(urlToSave, alias)

	if len(ret) == 0 {
		panic("no return value specified for SaveURL")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = returnFunc(urlToSave, alias)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockURLSaver_SaveURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveURL'
type MockURLSaver_SaveURL_Call struct {
	*mock.Call
}

// SaveURL is a helper method to define mock.On call
//   - urlToSave string
//   - alias string
func (_e *MockURLSaver_Expecter) SaveURL(urlToSave interface{}, alias interface{}) *MockURLSaver_SaveURL_Call {
	return &MockURLSaver_SaveURL_Call{Call: _e.mock.On("SaveURL", urlToSave, alias)}
}

func (_c *MockURLSaver_SaveURL_Call) Run(run func(urlToSave string, alias string)) *MockURLSaver_SaveURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		var arg1 string
		if args[1] != nil {
			arg1 = args[1].(string)
		}
		run(
			arg0,
			arg1,
		)
	})
	return _c
}

func (_c *MockURLSaver_SaveURL_Call) Return(err error) *MockURLSaver_SaveURL_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockURLSaver_SaveURL_Call) RunAndReturn(run func(urlToSave string, alias string) error) *MockURLSaver_SaveURL_Call {
	_c.Call.Return(run)
	return _c
}
